//Ultra sonic distance measurement + 12V RGB LED // By RPI
  
#define trigPin 11 // Trigger pin
#define echoPin 10 //Echo pin

#define elso 9 // Trigger pin
#define masodik 8 //Echo pin
#define harmadik 7 //Echo pin

#define szaj_r 6 // Trigger pin
#define szaj_g 5 //Echo pin
#define szaj_b 4 //Echo pin

int pinek[6];

int playing = 0;
int tonePin = 12;
void setup()
{
  pinek[0] = 9;
  pinek[1] = 8;
  pinek[2] = 7;
  pinek[3] = 6;
  pinek[4] = 5;
  pinek[5] = 4;
  
 pinMode(trigPin, OUTPUT); // kimenet
 pinMode(echoPin, INPUT); // bemenet
 pinMode(pinek[0], OUTPUT); // kimenet
 pinMode(pinek[1], OUTPUT);
 pinMode(pinek[2], OUTPUT);
 pinMode(pinek[3], OUTPUT); // kimenet
 pinMode(pinek[4], OUTPUT);
 pinMode(pinek[5], OUTPUT);
/* pinMode(szaj_r, OUTPUT); // kimenet
 pinMode(szaj_g, OUTPUT);
 pinMode(szaj_b, OUTPUT);*/
 Serial.begin(9600);
 while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
 }
 Serial.println("Tavolsag mero");

}

// Ezen kell optimalizálni, lehetne egy tone tömb amiben meghatározzuk a frekvenciát, egy másikban pedig a duration lenne.
// Ezután a hangok a adottak csak komponálni kell :) 
// TODO : egy ciklusban hívjuk meg a tone függvényt, egy tömbön szépen végiglépkedünk és pl 10 tone után lenne szín váltás. Így a kód is sokkal de sokkal szebb lenne...

void midi() {

    changeLedColors();
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    changeLedColors();
    tone(tonePin, 391, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    changeLedColors();
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    changeLedColors();
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 234.374625);
    delay(260.41625);
    changeLedColors();
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    changeLedColors();
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    changeLedColors();
    delay(86.8054166667);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 466, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 391, 234.374625);
    delay(260.41625);
    changeLedColors();
    delay(86.8054166667);
    tone(tonePin, 415, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 622, 156.24975);
    delay(173.610833333);
    tone(tonePin, 698, 78.124875);
    delay(86.8054166667);
    tone(tonePin, 783, 78.124875);
    delay(86.8054166667);
    tone(tonePin, 830, 312.4995);
    delay(347.221666667);
    changeLedColors();
    tone(tonePin, 830, 156.24975);
    delay(173.610833333);
    tone(tonePin, 932, 156.24975);
    delay(173.610833333);
    tone(tonePin, 830, 156.24975);
    delay(173.610833333);
    tone(tonePin, 783, 156.24975);
    delay(173.610833333);
    tone(tonePin, 698, 312.4995);
    delay(347.221666667);
    changeLedColors();
    tone(tonePin, 698, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 698, 312.4995);
    delay(347.221666667);
    tone(tonePin, 932, 312.4995);
    delay(347.221666667);
    tone(tonePin, 932, 156.24975);
    delay(173.610833333);
    changeLedColors();
    tone(tonePin, 1046, 156.24975);
    delay(173.610833333);
    tone(tonePin, 932, 156.24975);
    delay(173.610833333);
    tone(tonePin, 830, 156.24975);
    delay(173.610833333);
    tone(tonePin, 783, 312.4995);
    delay(347.221666667);
    changeLedColors();
    tone(tonePin, 622, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 622, 312.4995);
    delay(347.221666667);
    tone(tonePin, 1046, 312.4995);
    delay(347.221666667);
    tone(tonePin, 1046, 156.24975);
    delay(173.610833333);
    changeLedColors();
    tone(tonePin, 1108, 156.24975);
    delay(173.610833333);
    tone(tonePin, 1046, 156.24975);
    delay(173.610833333);
    tone(tonePin, 932, 156.24975);
    delay(173.610833333);
    tone(tonePin, 830, 312.4995);
    delay(347.221666667);
    tone(tonePin, 698, 234.374625);
    delay(260.41625);
    changeLedColors();
    delay(86.8054166667);
    tone(tonePin, 622, 156.24975);
    delay(173.610833333);
    tone(tonePin, 622, 156.24975);
    delay(173.610833333);
    tone(tonePin, 698, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 932, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 783, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    changeLedColors();
    tone(tonePin, 830, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    changeLedColors();
    tone(tonePin, 391, 624.999);
    delay(694.443333333);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 546.874125);
    delay(607.637916667);
    changeLedColors();
    delay(86.8054166667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    changeLedColors();
    delay(347.221666667);
    tone(tonePin, 622, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    changeLedColors();
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 466, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 391, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    changeLedColors();
    tone(tonePin, 415, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    changeLedColors();
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    changeLedColors();
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    changeLedColors();
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    changeLedColors();
    tone(tonePin, 523, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    changeLedColors();
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 466, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    changeLedColors();
    tone(tonePin, 391, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 415, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 739, 156.24975);
    delay(173.610833333);
    tone(tonePin, 830, 78.124875);
    delay(86.8054166667);
    tone(tonePin, 932, 78.124875);
    changeLedColors();
    delay(86.8054166667);
    tone(tonePin, 987, 312.4995);
    delay(347.221666667);
    tone(tonePin, 987, 156.24975);
    delay(173.610833333);
    tone(tonePin, 1108, 156.24975);
    delay(173.610833333);
    tone(tonePin, 987, 156.24975);
    delay(173.610833333);
    tone(tonePin, 932, 156.24975);
    delay(173.610833333);
    tone(tonePin, 830, 312.4995);
    delay(347.221666667);
    tone(tonePin, 830, 234.374625);
    changeLedColors();
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 830, 312.4995);
    delay(347.221666667);
    tone(tonePin, 1108, 312.4995);
    delay(347.221666667);
    tone(tonePin, 1108, 156.24975);
    delay(173.610833333);
    tone(tonePin, 1244, 156.24975);
    delay(173.610833333);
    tone(tonePin, 1108, 156.24975);
    delay(173.610833333);
    tone(tonePin, 987, 156.24975);
    delay(173.610833333);
    tone(tonePin, 932, 312.4995);
    delay(347.221666667);
    tone(tonePin, 739, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 739, 312.4995);
    delay(347.221666667);
    tone(tonePin, 1244, 312.4995);
    changeLedColors();
    delay(347.221666667);
    tone(tonePin, 1244, 156.24975);
    delay(173.610833333);
    tone(tonePin, 1318, 156.24975);
    delay(173.610833333);
    tone(tonePin, 1244, 156.24975);
    delay(173.610833333);
    tone(tonePin, 1108, 156.24975);
    delay(173.610833333);
    tone(tonePin, 987, 312.4995);
    delay(347.221666667);
    tone(tonePin, 830, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    changeLedColors();
    tone(tonePin, 739, 156.24975);
    delay(173.610833333);
    tone(tonePin, 739, 156.24975);
    delay(173.610833333);
    tone(tonePin, 830, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 1108, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 932, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 987, 546.874125);
    delay(607.637916667);
    playing = 0;

}

// LED-ek vezérlése. A driverek (tranzisztorok Bázisát nyitjuk 1-es esetén)
// Szem (RGB), Száj (RGB) színek meghatározása
// TODO :: Azt lehetne hogy kiszűrjük az olyan számokat ahol RGB = 000 (legalább egy színt kapcsoljunk be....)
// Kellene egy BadNumbers tömb abban tároli a jó számokat ha nem megfelelő a szám, újat generálunk.

void changeLedColors() {
   int randomValue = random(1,63);
   int counter = 5;

    while(counter >= 0) {
      if((randomValue >> counter) & 1) {
        digitalWrite(pinek[counter], HIGH);
      }
      else {
        digitalWrite(pinek[counter], LOW);
      }
      counter--;
    }
}

// Próbálkozás, mario zene, nem valami jó.... Piezo miatt csak 1 sáv konvertálható. Hangszóró kellene...

void mario() {

    tone(tonePin, 440, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 440, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 440, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 369, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 440, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 523, 98.011265625);
    delay(108.90140625);
    tone(tonePin, 164, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 130, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 97, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 130, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 146, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 138, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 130, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 130, 132.102140625);
    delay(146.78015625);
    delay(4.73484375);
    tone(tonePin, 195, 132.102140625);
    delay(146.78015625);
    delay(4.73484375);
    tone(tonePin, 246, 132.102140625);
    delay(146.78015625);
    delay(4.73484375);
    tone(tonePin, 261, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 220, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 246, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 195, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 164, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 174, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 174, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 164, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 130, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 97, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 130, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 146, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 138, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 130, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 130, 132.102140625);
    delay(146.78015625);
    delay(4.73484375);
    tone(tonePin, 195, 132.102140625);
    delay(146.78015625);
    delay(4.73484375);
    tone(tonePin, 246, 132.102140625);
    delay(146.78015625);
    delay(4.73484375);
    tone(tonePin, 261, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 220, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 246, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 195, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 164, 200.283890625);
    delay(222.53765625);
    delay(4.73484375);
    tone(tonePin, 174, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 174, 200.283890625);
    delay(222.53765625);
    tone(tonePin, 783, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(459.27984375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 880, 200.283890625);
    delay(222.53765625);
    delay(232.00734375);
    tone(tonePin, 783, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(459.27984375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 880, 200.283890625);
    delay(222.53765625);
    delay(232.00734375);
    tone(tonePin, 783, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(459.27984375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 880, 200.283890625);
    delay(222.53765625);
    delay(459.27984375);
    tone(tonePin, 830, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 932, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 1046, 715.908375);
    delay(795.45375);
    delay(113.63625);
    tone(tonePin, 783, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(459.27984375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 880, 200.283890625);
    delay(222.53765625);
    delay(232.00734375);
    tone(tonePin, 783, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(459.27984375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 880, 200.283890625);
    delay(222.53765625);
    delay(232.00734375);
    tone(tonePin, 783, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 783, 98.011265625);
    delay(108.90140625);
    delay(459.27984375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(118.37109375);
    tone(tonePin, 880, 98.011265625);
    delay(108.90140625);
    delay(4.73484375);
    tone(tonePin, 880, 200.283890625);
    delay(222.53765625);
    delay(459.27984375);
    tone(tonePin, 830, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 932, 200.283890625);
    delay(222.53765625);
    delay(118.37109375);
    tone(tonePin, 1046, 715.908375);
    delay(795.45375);
    tone(tonePin, 440, 818.181);
    delay(909.09);
    tone(tonePin, 391, 818.181);
    delay(909.09);
    tone(tonePin, 349, 818.181);
    delay(909.09);
    tone(tonePin, 329, 818.181);
    delay(909.09);
    tone(tonePin, 440, 818.181);
    delay(909.09);
    tone(tonePin, 391, 818.181);
    delay(909.09);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 204.54525);
    delay(227.2725);
    tone(tonePin, 184, 102.272625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(795.45375);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 440, 818.181);
    delay(909.09);
    tone(tonePin, 391, 818.181);
    delay(909.09);
    tone(tonePin, 349, 818.181);
    delay(909.09);
    tone(tonePin, 329, 818.181);
    delay(909.09);
    tone(tonePin, 440, 818.181);
    delay(909.09);
    tone(tonePin, 391, 818.181);
    delay(909.09);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 204.54525);
    delay(227.2725);
    tone(tonePin, 184, 102.272625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(795.45375);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 783, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    delay(454.545);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    tone(tonePin, 880, 204.54525);
    delay(227.2725);
    delay(227.2725);
    tone(tonePin, 783, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    delay(454.545);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    tone(tonePin, 880, 204.54525);
    delay(227.2725);
    delay(227.2725);
    tone(tonePin, 783, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    delay(454.545);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    tone(tonePin, 880, 204.54525);
    delay(227.2725);
    delay(454.545);
    tone(tonePin, 830, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 932, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 1046, 818.181);
    delay(909.09);
    tone(tonePin, 783, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    delay(454.545);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    tone(tonePin, 880, 204.54525);
    delay(227.2725);
    delay(227.2725);
    tone(tonePin, 783, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    delay(454.545);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    tone(tonePin, 880, 204.54525);
    delay(227.2725);
    delay(227.2725);
    tone(tonePin, 783, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    tone(tonePin, 783, 102.272625);
    delay(113.63625);
    delay(454.545);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 880, 102.272625);
    delay(113.63625);
    tone(tonePin, 880, 204.54525);
    delay(227.2725);
    delay(454.545);
    tone(tonePin, 830, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 932, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 1046, 818.181);
    delay(909.09);
    tone(tonePin, 440, 818.181);
    delay(909.09);
    tone(tonePin, 391, 818.181);
    delay(909.09);
    tone(tonePin, 349, 818.181);
    delay(909.09);
    tone(tonePin, 329, 818.181);
    delay(909.09);
    tone(tonePin, 440, 818.181);
    delay(909.09);
    tone(tonePin, 391, 818.181);
    delay(909.09);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 204.54525);
    delay(227.2725);
    tone(tonePin, 184, 102.272625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(795.45375);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 440, 818.181);
    delay(909.09);
    tone(tonePin, 391, 818.181);
    delay(909.09);
    tone(tonePin, 349, 818.181);
    delay(909.09);
    tone(tonePin, 329, 818.181);
    delay(909.09);
    tone(tonePin, 440, 818.181);
    delay(909.09);
    tone(tonePin, 391, 818.181);
    delay(909.09);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 204.54525);
    delay(227.2725);
    tone(tonePin, 184, 102.272625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(795.45375);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 97, 204.54525);
    delay(227.2725);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 146, 204.54525);
    delay(227.2725);
    tone(tonePin, 138, 102.272625);
    delay(113.63625);
    tone(tonePin, 130, 204.54525);
    delay(227.2725);
    tone(tonePin, 130, 136.3635);
    delay(151.515);
    tone(tonePin, 195, 136.3635);
    delay(151.515);
    tone(tonePin, 246, 136.3635);
    delay(151.515);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 195, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 164, 204.54525);
    delay(227.2725);
    tone(tonePin, 174, 102.272625);
    delay(113.63625);
    tone(tonePin, 174, 204.54525);
    delay(227.2725);

}

void loop() {
 long duration, distance;
 digitalWrite(trigPin, LOW);
 delayMicroseconds(2);
 digitalWrite(trigPin, HIGH);
 delayMicroseconds(10);
 digitalWrite(trigPin, LOW);
 duration = pulseIn(echoPin, HIGH);
 distance = (duration/2) / 29.1; // Tavolsag szamitasa
 Serial.println(distance);
 if (distance < 70) {
    midi();
 }
 else {
   digitalWrite(elso, LOW);
   digitalWrite(masodik, LOW);
   digitalWrite(harmadik, LOW);
   digitalWrite(szaj_g, LOW);
   digitalWrite(szaj_r, LOW);
   digitalWrite(szaj_b, LOW);
 }
 delay(250);
}
